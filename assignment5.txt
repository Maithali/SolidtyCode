//SPDX-License-Identifeir:MIT
pragma solidity >=0.5.0 <0.9.0;

interface Pract{
	function minter() external returns(address);
	function mint(address receiver, uint amount) external;
	function send(address receiver, uint amount) external;
	event Sent(address from, address to,uint amount);
	error InsufficientBalance(uint requested, uint available);
}
contract Token is Pract{
  address public override minter;
  mapping(address=> uint) public balances;
  constructor(){
	minter = msg.sender;
   }
   function mint(address receiver,uint amount)public override{
	require(msg.sender == minter);
	balances[receiver]+= amount;
   }
   function send(address receiver, uint amount)public override{
    	if(amount > balances[msg.sender])
	   revert InsufficientBalance({
   		requested:amount,
		available:balances[msg.sender]
	});
	
	balances[msg.sender]-= amount;
	balances[receiver]+= amount;
	emit Sent(msg.sender,receiver, amount);
   }
   
}